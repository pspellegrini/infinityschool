AP01: Crie uma tabela "pedidos" com as colunas "id_pedido", "id_cliente" e "data_pedido". Adicione uma constraint de chave estrangeira na coluna "id_cliente" para garantir que um pedido só possa ser feito por um cliente existente na tabela "clientes".

AP02: Crie uma tabela "produtos" com as colunas "id_produto", "nome_produto" e "preco". Adicione uma constraint de verificação para garantir que o preço do produto seja maior que zero.

AP03: Adicione uma constraint de restrição única na coluna "email" da tabela "clientes" para garantir que nenhum cliente possa ter o mesmo endereço de e-mail.

AP04: Escreva uma consulta que recupere o nome de todos os produtos que o seu preco seja maior à 15 reais. Use uma subconsulta para realizar essa tarefa.

#Resolução
USE `u274908554_713A`;
CREATE TABLE sheep_cliente(
	id_cliente INT NOT NULL AUTO_INCREMENT UNIQUE PRIMARY KEY,
    nome_cliente VARCHAR(120) NOT NULL
	);

CREATE TABLE sheep_pedido(
	id_pedido INT NOT NULL AUTO_INCREMENT UNIQUE PRIMARY KEY,
    id_cliente INT,
    data_pedido DATE NOT NULL,
    FOREIGN KEY (id_cliente) REFERENCES sheep_cliente(id_cliente)
	);

CREATE TABLE sheep_produtos(
	id_produto INT NOT NULL AUTO_INCREMENT UNIQUE PRIMARY KEY,
    nome_produto VARCHAR(120) NOT NULL,
    preco DECIMAL (10, 2),
    CHECK (preco > 0)
    );

ALTER TABLE sheep_cliente
ADD COLUMN email VARCHAR(120) NOT NULL UNIQUE;

INSERT INTO sheep_produtos (nome_produto, preco) VALUES
("Ouro Branco 1kg", 42.99),
("Lacta Favoritos Sortidos 250.6g", 10.99),
("Toblerone Mel e Amendoas 100g", 30.19),
("Bisão Branco 201,6g", 11.50),
("Amandita 200g", 15.29),
("Oreo 270g", 10.99);

SELECT nome_produto, preco FROM sheep_produtos WHERE preco > 15;